"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./stores/movieStore.ts":
/*!******************************!*\
  !*** ./stores/movieStore.ts ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   movieStore: function() { return /* binding */ movieStore; }\n/* harmony export */ });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mobx */ \"(app-pages-browser)/./node_modules/mobx/dist/mobx.esm.js\");\n\nclass MovieStore {\n    async fetchMovies(userId) {\n        // Placeholder for actual implementation\n        return [];\n    }\n    async fetchStats(userId) {\n        // Placeholder for actual implementation\n        return {};\n    }\n    async fetchMoviesAndStats(userId) {\n        this.loading = true;\n        try {\n            const redisClient = await getRedisClientisClient(); // Get the Redis client\n            // Check Redis cache first\n            const cachedData = await redisClient.get(\"user:\".concat(userId, \":movieData\"));\n            if (cachedData) {\n                (0,mobx__WEBPACK_IMPORTED_MODULE_0__.runInAction)(()=>{\n                    const parsed = JSON.parse(cachedData);\n                    this.movies = parsed.movies;\n                    this.stats = parsed.stats;\n                });\n                return;\n            }\n            // If no cache, fetch from Firebase using Promise.all\n            const [moviesData, statsData] = await Promise.all([\n                this.fetchMovies(userId),\n                this.fetchStats(userId)\n            ]);\n            // Cache the results\n            await redisClient.setEx(\"user:\".concat(userId, \":movieData\"), 3600, JSON.stringify({\n                movies: moviesData,\n                stats: statsData\n            }));\n            (0,mobx__WEBPACK_IMPORTED_MODULE_0__.runInAction)(()=>{\n                this.movies = moviesData;\n                this.stats = statsData;\n            });\n        } catch (error) {\n            console.error(\"Error fetching data:\", error);\n        } finally{\n            (0,mobx__WEBPACK_IMPORTED_MODULE_0__.runInAction)(()=>{\n                this.loading = false;\n            });\n        }\n    }\n    constructor(){\n        this.movies = [];\n        this.stats = null // Adjusted type to allow for any data structure\n        ;\n        this.loading = false;\n        (0,mobx__WEBPACK_IMPORTED_MODULE_0__.makeAutoObservable)(this);\n    }\n}\nconst movieStore = new MovieStore();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3N0b3Jlcy9tb3ZpZVN0b3JlLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXVEO0FBSXZELE1BQU1FO0lBU0osTUFBTUMsWUFBWUMsTUFBYyxFQUFFO1FBQ2hDLHdDQUF3QztRQUN4QyxPQUFPLEVBQUU7SUFDWDtJQUVBLE1BQU1DLFdBQVdELE1BQWMsRUFBRTtRQUMvQix3Q0FBd0M7UUFDeEMsT0FBTyxDQUFDO0lBQ1Y7SUFFQSxNQUFNRSxvQkFBb0JGLE1BQWMsRUFBRTtRQUN4QyxJQUFJLENBQUNHLE9BQU8sR0FBRztRQUNmLElBQUk7WUFDRixNQUFNQyxjQUFjLE1BQU1DLDBCQUEwQix1QkFBdUI7WUFFM0UsMEJBQTBCO1lBQzFCLE1BQU1DLGFBQWEsTUFBTUYsWUFBWUcsR0FBRyxDQUFDLFFBQWUsT0FBUFAsUUFBTztZQUN4RCxJQUFJTSxZQUFZO2dCQUNkVCxpREFBV0EsQ0FBQztvQkFDVixNQUFNVyxTQUFTQyxLQUFLQyxLQUFLLENBQUNKO29CQUMxQixJQUFJLENBQUNLLE1BQU0sR0FBR0gsT0FBT0csTUFBTTtvQkFDM0IsSUFBSSxDQUFDQyxLQUFLLEdBQUdKLE9BQU9JLEtBQUs7Z0JBQzNCO2dCQUNBO1lBQ0Y7WUFFQSxxREFBcUQ7WUFDckQsTUFBTSxDQUFDQyxZQUFZQyxVQUFVLEdBQUcsTUFBTUMsUUFBUUMsR0FBRyxDQUFDO2dCQUNoRCxJQUFJLENBQUNqQixXQUFXLENBQUNDO2dCQUNqQixJQUFJLENBQUNDLFVBQVUsQ0FBQ0Q7YUFDakI7WUFFRCxvQkFBb0I7WUFDcEIsTUFBTUksWUFBWWEsS0FBSyxDQUNyQixRQUFlLE9BQVBqQixRQUFPLGVBQ2YsTUFDQVMsS0FBS1MsU0FBUyxDQUFDO2dCQUFFUCxRQUFRRTtnQkFBWUQsT0FBT0U7WUFBVTtZQUd4RGpCLGlEQUFXQSxDQUFDO2dCQUNWLElBQUksQ0FBQ2MsTUFBTSxHQUFHRTtnQkFDZCxJQUFJLENBQUNELEtBQUssR0FBR0U7WUFDZjtRQUNGLEVBQUUsT0FBT0ssT0FBTztZQUNkQyxRQUFRRCxLQUFLLENBQUMsd0JBQXdCQTtRQUN4QyxTQUFVO1lBQ1J0QixpREFBV0EsQ0FBQztnQkFDVixJQUFJLENBQUNNLE9BQU8sR0FBRztZQUNqQjtRQUNGO0lBQ0Y7SUF0REFrQixhQUFjO2FBSmRWLFNBQVMsRUFBRTthQUNYQyxRQUFhLEtBQU0sZ0RBQWdEOzthQUNuRVQsVUFBVTtRQUdSUCx3REFBa0JBLENBQUMsSUFBSTtJQUN6QjtBQXFERjtBQUVPLE1BQU0wQixhQUFhLElBQUl4QixhQUFhIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3N0b3Jlcy9tb3ZpZVN0b3JlLnRzP2I3OTQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbWFrZUF1dG9PYnNlcnZhYmxlLCBydW5JbkFjdGlvbiB9IGZyb20gJ21vYngnO1xyXG5pbXBvcnQgeyBnZXRSZWRpc0NsaWVudCB9IGZyb20gJ3V0aWxzL3JlZGlzJztcclxuXHJcblxyXG5jbGFzcyBNb3ZpZVN0b3JlIHtcclxuICBtb3ZpZXMgPSBbXTtcclxuICBzdGF0czogYW55ID0gbnVsbDsgLy8gQWRqdXN0ZWQgdHlwZSB0byBhbGxvdyBmb3IgYW55IGRhdGEgc3RydWN0dXJlXHJcbiAgbG9hZGluZyA9IGZhbHNlO1xyXG5cclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIG1ha2VBdXRvT2JzZXJ2YWJsZSh0aGlzKTtcclxuICB9XHJcblxyXG4gIGFzeW5jIGZldGNoTW92aWVzKHVzZXJJZDogc3RyaW5nKSB7XHJcbiAgICAvLyBQbGFjZWhvbGRlciBmb3IgYWN0dWFsIGltcGxlbWVudGF0aW9uXHJcbiAgICByZXR1cm4gW107XHJcbiAgfVxyXG5cclxuICBhc3luYyBmZXRjaFN0YXRzKHVzZXJJZDogc3RyaW5nKSB7XHJcbiAgICAvLyBQbGFjZWhvbGRlciBmb3IgYWN0dWFsIGltcGxlbWVudGF0aW9uXHJcbiAgICByZXR1cm4ge307XHJcbiAgfVxyXG5cclxuICBhc3luYyBmZXRjaE1vdmllc0FuZFN0YXRzKHVzZXJJZDogc3RyaW5nKSB7XHJcbiAgICB0aGlzLmxvYWRpbmcgPSB0cnVlO1xyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc3QgcmVkaXNDbGllbnQgPSBhd2FpdCBnZXRSZWRpc0NsaWVudGlzQ2xpZW50KCk7IC8vIEdldCB0aGUgUmVkaXMgY2xpZW50XHJcblxyXG4gICAgICAvLyBDaGVjayBSZWRpcyBjYWNoZSBmaXJzdFxyXG4gICAgICBjb25zdCBjYWNoZWREYXRhID0gYXdhaXQgcmVkaXNDbGllbnQuZ2V0KGB1c2VyOiR7dXNlcklkfTptb3ZpZURhdGFgKTtcclxuICAgICAgaWYgKGNhY2hlZERhdGEpIHtcclxuICAgICAgICBydW5JbkFjdGlvbigoKSA9PiB7XHJcbiAgICAgICAgICBjb25zdCBwYXJzZWQgPSBKU09OLnBhcnNlKGNhY2hlZERhdGEpO1xyXG4gICAgICAgICAgdGhpcy5tb3ZpZXMgPSBwYXJzZWQubW92aWVzO1xyXG4gICAgICAgICAgdGhpcy5zdGF0cyA9IHBhcnNlZC5zdGF0cztcclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vIElmIG5vIGNhY2hlLCBmZXRjaCBmcm9tIEZpcmViYXNlIHVzaW5nIFByb21pc2UuYWxsXHJcbiAgICAgIGNvbnN0IFttb3ZpZXNEYXRhLCBzdGF0c0RhdGFdID0gYXdhaXQgUHJvbWlzZS5hbGwoW1xyXG4gICAgICAgIHRoaXMuZmV0Y2hNb3ZpZXModXNlcklkKSxcclxuICAgICAgICB0aGlzLmZldGNoU3RhdHModXNlcklkKVxyXG4gICAgICBdKTtcclxuXHJcbiAgICAgIC8vIENhY2hlIHRoZSByZXN1bHRzXHJcbiAgICAgIGF3YWl0IHJlZGlzQ2xpZW50LnNldEV4KFxyXG4gICAgICAgIGB1c2VyOiR7dXNlcklkfTptb3ZpZURhdGFgLFxyXG4gICAgICAgIDM2MDAsIC8vIDEgaG91ciBjYWNoZVxyXG4gICAgICAgIEpTT04uc3RyaW5naWZ5KHsgbW92aWVzOiBtb3ZpZXNEYXRhLCBzdGF0czogc3RhdHNEYXRhIH0pXHJcbiAgICAgICk7XHJcblxyXG4gICAgICBydW5JbkFjdGlvbigoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5tb3ZpZXMgPSBtb3ZpZXNEYXRhO1xyXG4gICAgICAgIHRoaXMuc3RhdHMgPSBzdGF0c0RhdGE7XHJcbiAgICAgIH0pO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgZGF0YTonLCBlcnJvcik7XHJcbiAgICB9IGZpbmFsbHkge1xyXG4gICAgICBydW5JbkFjdGlvbigoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IG1vdmllU3RvcmUgPSBuZXcgTW92aWVTdG9yZSgpO1xyXG4iXSwibmFtZXMiOlsibWFrZUF1dG9PYnNlcnZhYmxlIiwicnVuSW5BY3Rpb24iLCJNb3ZpZVN0b3JlIiwiZmV0Y2hNb3ZpZXMiLCJ1c2VySWQiLCJmZXRjaFN0YXRzIiwiZmV0Y2hNb3ZpZXNBbmRTdGF0cyIsImxvYWRpbmciLCJyZWRpc0NsaWVudCIsImdldFJlZGlzQ2xpZW50aXNDbGllbnQiLCJjYWNoZWREYXRhIiwiZ2V0IiwicGFyc2VkIiwiSlNPTiIsInBhcnNlIiwibW92aWVzIiwic3RhdHMiLCJtb3ZpZXNEYXRhIiwic3RhdHNEYXRhIiwiUHJvbWlzZSIsImFsbCIsInNldEV4Iiwic3RyaW5naWZ5IiwiZXJyb3IiLCJjb25zb2xlIiwiY29uc3RydWN0b3IiLCJtb3ZpZVN0b3JlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./stores/movieStore.ts\n"));

/***/ })

});